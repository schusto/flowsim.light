name: /apply

on:
  issue_comment:
    types: [created, edited]

permissions:
  contents: write        # needed to push commits
  pull-requests: write   # needed to comment back on the PR
  issues: write          # optional; used to post error/success comments

jobs:
  apply:
    if: >
      github.event.issue.pull_request &&
      startsWith(github.event.comment.body, '/apply') &&
      (
        github.event.comment.author_association == 'OWNER' ||
        github.event.comment.author_association == 'MEMBER' ||
        github.event.comment.author_association == 'COLLABORATOR'
      )
    runs-on: ubuntu-latest

    steps:
      - name: Get PR info
        id: pr
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            const prNumber = context.payload.issue.number;
            const pr = await github.pulls.get({ owner, repo, pull_number: prNumber });
            core.setOutput('headRepo', pr.data.head.repo.full_name);
            core.setOutput('headRef',  pr.data.head.ref);
            core.setOutput('baseRepo', pr.data.base.repo.full_name);
            core.setOutput('baseRef',  pr.data.base.ref);

      - name: Check out PR branch (HEAD)
        uses: actions/checkout@v4
        with:
          repository: ${{ steps.pr.outputs.headRepo }}
          ref: ${{ steps.pr.outputs.headRef }}
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Extract patch from comment into patch.diff
        id: extract
        shell: bash
        run: |
          body="${{ github.event.comment.body }}"
          # Grab the first fenced code block tagged as diff or patch; fallback to any fenced block.
          echo "$body" | awk '
            BEGIN{inblock=0; lang=""}
            /^```/{ 
              if(inblock==0){ 
                inblock=1; lang=$0
              } else { 
                if(out==1) exit; 
                inblock=0; lang=""
              } 
              next
            }
            {
              if(inblock==1){
                if (lang ~ /^```(diff|patch)/ || lang ~ /^```$/){ 
                  print
                  out=1
                }
              }
            }' > patch.diff || true

          if [ ! -s patch.diff ]; then
            echo "No patch found in the comment."
            exit 2
          fi
          echo "Found patch:"
          head -n 50 patch.diff

      - name: Apply patch
        id: apply
        shell: bash
        run: |
          set -e
          # Try a 3-way apply first (handles context drift), then fall back to plain.
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

          # Show status before
          echo "Before applying:"
          git status --porcelain

          # First attempt with -3 (three-way merge)
          if git apply -3 --index patch.diff; then
            echo "three_way=1" >> $GITHUB_OUTPUT
          else
            echo "Three-way failed; trying plain apply…"
            git reset --hard
            if git apply --index patch.diff; then
              echo "three_way=0" >> $GITHUB_OUTPUT
            else
              echo "Patch failed to apply."
              exit 3
            fi
          fi

          # Commit changes (if any)
          if ! git diff --cached --quiet; then
            git commit -m "Apply patch from /apply by @${{ github.actor }}"
          else
            echo "No changes to commit (patch may already be applied)."
            echo "no_changes=1" >> $GITHUB_OUTPUT
          fi

      - name: Push
        if: steps.apply.outputs.no_changes != '1'
        run: |
          git push origin HEAD:${{ steps.pr.outputs.headRef }}

      - name: Comment success
        if: success()
        uses: actions/github-script@v7
        with:
          script: |
            const issue_number = context.payload.issue.number;
            const msg = `✅ Patch applied${{ steps.apply.outputs.no_changes == '1' ? ' (no changes detected)' : '' }}.`;
            await github.issues.createComment({
              ...context.repo,
              issue_number,
              body: msg
            });

    # Error reporting
  report:
    needs: apply
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Post failure comment
        uses: actions/github-script@v7
        with:
          script: |
            const issue_number = context.payload.issue.number;
            const body = context.payload.comment.body || '';
            let note = '❌ `/apply` failed.\n';
            if (!body.includes('```')) {
              note += '\nNo fenced code block with a patch was found. Add a block like:\n\n' +
                      '```diff\n' +
                      'diff --git a/index.html b/index.html\n' +
                      '--- a/index.html\n' +
                      '+++ b/index.html\n' +
                      '@@ … your diff …\n' +
                      '```\n';
            } else {
              note += '\nThe patch failed to apply cleanly. Make sure it is a unified diff against the PR head branch.';
            }
            await github.issues.createComment({ ...context.repo, issue_number, body: note });
